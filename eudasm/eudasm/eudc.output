State 128 conflicts: 1 shift/reduce
State 129 conflicts: 1 shift/reduce
State 130 conflicts: 1 shift/reduce
State 131 conflicts: 1 shift/reduce
State 132 conflicts: 1 shift/reduce
State 133 conflicts: 1 shift/reduce
State 134 conflicts: 1 shift/reduce
State 135 conflicts: 1 shift/reduce
State 136 conflicts: 1 shift/reduce
State 137 conflicts: 1 shift/reduce
State 138 conflicts: 1 shift/reduce
State 158 conflicts: 1 shift/reduce
State 160 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 statement: fdef_statement
    2          | vardecl_statement
    3          | if_statement
    4          | while_statement
    5          | for_statement
    6          | expr_statement
    7          | continue_statement
    8          | break_statement
    9          | return_statement
   10          | error ';'
   11          | error '}'

   12 block: statement
   13      | '{' statement_list '}'

   14 statement_list: statement_list statement
   15               | /* empty */

   16 fdef_statement: FUNC IDENTIFIER '(' argdef ')' block

   17 argdef: VARTYPE IDENTIFIER argdef2
   18       | /* empty */

   19 argdef2: argdef2 ',' VARTYPE IDENTIFIER
   20        | /* empty */

   21 vardecl_statement: VARTYPE IDENTIFIER vardecl_list ';'

   22 vardecl_list: vardecl_list ',' IDENTIFIER
   23             | /* empty */

   24 if_statement: IF '(' expr ')' block
   25             | IF '(' expr ')' block ELSE block

   26 while_statement: WHILE '(' expr ')' block

   27 for_statement: FOR '(' expr ';' expr ';' expr ')' block

   28 preexp: INTEGER
   29       | STRING
   30       | IDENTIFIER
   31       | '(' expr ')'

   32 expr_1: preexp
   33       | expr_1 MONIC_INC
   34       | expr_1 MONIC_DEC
   35       | expr_1 '(' arglist ')'
   36       | expr_1 '[' expr ']'

   37 arglist: expr arglist2
   38        | /* empty */

   39 arglist2: arglist2 ',' expr
   40         | /* empty */

   41 expr_2: expr_1
   42       | MONIC_INC expr_2
   43       | MONIC_DEC expr_2
   44       | '+' expr_2
   45       | '-' expr_2
   46       | '!' expr_2
   47       | '~' expr_2
   48       | '*' expr_2
   49       | '&' expr_2

   50 expr_3: expr_2
   51       | expr_3 '*' expr_2
   52       | expr_3 '/' expr_2
   53       | expr_3 '%' expr_2

   54 expr_4: expr_3
   55       | expr_4 '+' expr_3
   56       | expr_4 '-' expr_3

   57 expr_5: expr_4
   58       | expr_5 BINARY_LSF expr_4
   59       | expr_5 BINARY_RSF expr_4

   60 expr_6: expr_5
   61       | expr_6 '<' expr_5
   62       | expr_6 BINARY_LE expr_5
   63       | expr_6 '>' expr_5
   64       | expr_6 BINARY_GE expr_5
   65       | expr_6 BINARY_EQ expr_5
   66       | expr_6 BINARY_NE expr_5

   67 expr_7: expr_6
   68       | expr_7 '&' expr_6
   69       | expr_7 '^' expr_6
   70       | expr_7 '|' expr_6

   71 expr_8: expr_7
   72       | expr_8 BINARY_LOGICALAND expr_7
   73       | expr_8 BINARY_LOGICALOR expr_7

   74 expr_9: expr_8
   75       | expr_9 '?' expr_9 ':' expr_9
   76       | expr_8 '=' expr_9
   77       | expr_8 ADDASSIGN expr_9
   78       | expr_8 SUBASSIGN expr_9
   79       | expr_8 MULASSIGN expr_9
   80       | expr_8 DIVASSIGN expr_9
   81       | expr_8 RMDASSIGN expr_9
   82       | expr_8 ANDASSIGN expr_9
   83       | expr_8 ORASSIGN expr_9
   84       | expr_8 XORASSIGN expr_9
   85       | expr_8 LSFASSIGN expr_9
   86       | expr_8 RSFASSIGN expr_9

   87 expr: expr_9

   88 expr_statement: expr ';'

   89 continue_statement: CONTINUE ';'

   90 break_statement: BREAK ';'

   91 return_statement: RETURN expr ';'

   92 program: statement_list


Terminals, with rules where they appear

$end (0) 0
'!' (33) 46
'%' (37) 53
'&' (38) 49 68
'(' (40) 16 24 25 26 27 31 35
')' (41) 16 24 25 26 27 31 35
'*' (42) 48 51
'+' (43) 44 55
',' (44) 19 22 39
'-' (45) 45 56
'/' (47) 52
':' (58) 75
';' (59) 10 21 27 88 89 90 91
'<' (60) 61
'=' (61) 76
'>' (62) 63
'?' (63) 75
'[' (91) 36
']' (93) 36
'^' (94) 69
'{' (123) 13
'|' (124) 70
'}' (125) 11 13
'~' (126) 47
error (256) 10 11
IDENTIFIER (258) 16 17 19 21 22 30
INTEGER (259) 28
STRING (260) 29
VARTYPE (261) 17 19 21
FUNC (262) 16
FOR (263) 27
WHILE (264) 26
IF (265) 24 25
ELSE (266) 25
CONTINUE (267) 89
BREAK (268) 90
RETURN (269) 91
MONIC_INC (270) 33 42
MONIC_DEC (271) 34 43
BINARY_LSF (272) 58
BINARY_RSF (273) 59
BINARY_LE (274) 62
BINARY_GE (275) 64
BINARY_EQ (276) 65
BINARY_NE (277) 66
BINARY_LOGICALAND (278) 72
BINARY_LOGICALOR (279) 73
ADDASSIGN (280) 77
SUBASSIGN (281) 78
MULASSIGN (282) 79
DIVASSIGN (283) 80
RMDASSIGN (284) 81
ANDASSIGN (285) 82
ORASSIGN (286) 83
XORASSIGN (287) 84
LSFASSIGN (288) 85
RSFASSIGN (289) 86


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
statement (59)
    on left: 1 2 3 4 5 6 7 8 9 10 11, on right: 12 14
block (60)
    on left: 12 13, on right: 16 24 25 26 27
statement_list (61)
    on left: 14 15, on right: 13 14 92
fdef_statement (62)
    on left: 16, on right: 1
argdef (63)
    on left: 17 18, on right: 16
argdef2 (64)
    on left: 19 20, on right: 17 19
vardecl_statement (65)
    on left: 21, on right: 2
vardecl_list (66)
    on left: 22 23, on right: 21 22
if_statement (67)
    on left: 24 25, on right: 3
while_statement (68)
    on left: 26, on right: 4
for_statement (69)
    on left: 27, on right: 5
preexp (70)
    on left: 28 29 30 31, on right: 32
expr_1 (71)
    on left: 32 33 34 35 36, on right: 33 34 35 36 41
arglist (72)
    on left: 37 38, on right: 35
arglist2 (73)
    on left: 39 40, on right: 37 39
expr_2 (74)
    on left: 41 42 43 44 45 46 47 48 49, on right: 42 43 44 45 46 47
    48 49 50 51 52 53
expr_3 (75)
    on left: 50 51 52 53, on right: 51 52 53 54 55 56
expr_4 (76)
    on left: 54 55 56, on right: 55 56 57 58 59
expr_5 (77)
    on left: 57 58 59, on right: 58 59 60 61 62 63 64 65 66
expr_6 (78)
    on left: 60 61 62 63 64 65 66, on right: 61 62 63 64 65 66 67 68
    69 70
expr_7 (79)
    on left: 67 68 69 70, on right: 68 69 70 71 72 73
expr_8 (80)
    on left: 71 72 73, on right: 72 73 74 76 77 78 79 80 81 82 83 84
    85 86
expr_9 (81)
    on left: 74 75 76 77 78 79 80 81 82 83 84 85 86, on right: 75 76
    77 78 79 80 81 82 83 84 85 86 87
expr (82)
    on left: 87, on right: 24 25 26 27 31 36 37 39 88 91
expr_statement (83)
    on left: 88, on right: 6
continue_statement (84)
    on left: 89, on right: 7
break_statement (85)
    on left: 90, on right: 8
return_statement (86)
    on left: 91, on right: 9
program (87)
    on left: 92, on right: 0


state 0

    0 $accept: . program $end

    $default  reduce using rule 15 (statement_list)

    statement_list  go to state 1
    program         go to state 2


state 1

   14 statement_list: statement_list . statement
   92 program: statement_list .

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    VARTYPE     shift, and go to state 7
    FUNC        shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    CONTINUE    shift, and go to state 12
    BREAK       shift, and go to state 13
    RETURN      shift, and go to state 14
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    $end  reduce using rule 92 (program)

    statement           go to state 24
    fdef_statement      go to state 25
    vardecl_statement   go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29
    preexp              go to state 30
    expr_1              go to state 31
    expr_2              go to state 32
    expr_3              go to state 33
    expr_4              go to state 34
    expr_5              go to state 35
    expr_6              go to state 36
    expr_7              go to state 37
    expr_8              go to state 38
    expr_9              go to state 39
    expr                go to state 40
    expr_statement      go to state 41
    continue_statement  go to state 42
    break_statement     go to state 43
    return_statement    go to state 44


state 2

    0 $accept: program . $end

    $end  shift, and go to state 45


state 3

   10 statement: error . ';'
   11          | error . '}'

    ';'  shift, and go to state 46
    '}'  shift, and go to state 47


state 4

   30 preexp: IDENTIFIER .

    $default  reduce using rule 30 (preexp)


state 5

   28 preexp: INTEGER .

    $default  reduce using rule 28 (preexp)


state 6

   29 preexp: STRING .

    $default  reduce using rule 29 (preexp)


state 7

   21 vardecl_statement: VARTYPE . IDENTIFIER vardecl_list ';'

    IDENTIFIER  shift, and go to state 48


state 8

   16 fdef_statement: FUNC . IDENTIFIER '(' argdef ')' block

    IDENTIFIER  shift, and go to state 49


state 9

   27 for_statement: FOR . '(' expr ';' expr ';' expr ')' block

    '('  shift, and go to state 50


state 10

   26 while_statement: WHILE . '(' expr ')' block

    '('  shift, and go to state 51


state 11

   24 if_statement: IF . '(' expr ')' block
   25             | IF . '(' expr ')' block ELSE block

    '('  shift, and go to state 52


state 12

   89 continue_statement: CONTINUE . ';'

    ';'  shift, and go to state 53


state 13

   90 break_statement: BREAK . ';'

    ';'  shift, and go to state 54


state 14

   91 return_statement: RETURN . expr ';'

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 39
    expr    go to state 55


state 15

   42 expr_2: MONIC_INC . expr_2

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 56


state 16

   43 expr_2: MONIC_DEC . expr_2

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 57


state 17

   31 preexp: '(' . expr ')'

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 39
    expr    go to state 58


state 18

   44 expr_2: '+' . expr_2

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 59


state 19

   45 expr_2: '-' . expr_2

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 60


state 20

   46 expr_2: '!' . expr_2

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 61


state 21

   47 expr_2: '~' . expr_2

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 62


state 22

   48 expr_2: '*' . expr_2

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 63


state 23

   49 expr_2: '&' . expr_2

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 64


state 24

   14 statement_list: statement_list statement .

    $default  reduce using rule 14 (statement_list)


state 25

    1 statement: fdef_statement .

    $default  reduce using rule 1 (statement)


state 26

    2 statement: vardecl_statement .

    $default  reduce using rule 2 (statement)


state 27

    3 statement: if_statement .

    $default  reduce using rule 3 (statement)


state 28

    4 statement: while_statement .

    $default  reduce using rule 4 (statement)


state 29

    5 statement: for_statement .

    $default  reduce using rule 5 (statement)


state 30

   32 expr_1: preexp .

    $default  reduce using rule 32 (expr_1)


state 31

   33 expr_1: expr_1 . MONIC_INC
   34       | expr_1 . MONIC_DEC
   35       | expr_1 . '(' arglist ')'
   36       | expr_1 . '[' expr ']'
   41 expr_2: expr_1 .

    MONIC_INC  shift, and go to state 65
    MONIC_DEC  shift, and go to state 66
    '('        shift, and go to state 67
    '['        shift, and go to state 68

    $default  reduce using rule 41 (expr_2)


state 32

   50 expr_3: expr_2 .

    $default  reduce using rule 50 (expr_3)


state 33

   51 expr_3: expr_3 . '*' expr_2
   52       | expr_3 . '/' expr_2
   53       | expr_3 . '%' expr_2
   54 expr_4: expr_3 .

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71

    $default  reduce using rule 54 (expr_4)


state 34

   55 expr_4: expr_4 . '+' expr_3
   56       | expr_4 . '-' expr_3
   57 expr_5: expr_4 .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 57 (expr_5)


state 35

   58 expr_5: expr_5 . BINARY_LSF expr_4
   59       | expr_5 . BINARY_RSF expr_4
   60 expr_6: expr_5 .

    BINARY_LSF  shift, and go to state 74
    BINARY_RSF  shift, and go to state 75

    $default  reduce using rule 60 (expr_6)


state 36

   61 expr_6: expr_6 . '<' expr_5
   62       | expr_6 . BINARY_LE expr_5
   63       | expr_6 . '>' expr_5
   64       | expr_6 . BINARY_GE expr_5
   65       | expr_6 . BINARY_EQ expr_5
   66       | expr_6 . BINARY_NE expr_5
   67 expr_7: expr_6 .

    BINARY_LE  shift, and go to state 76
    BINARY_GE  shift, and go to state 77
    BINARY_EQ  shift, and go to state 78
    BINARY_NE  shift, and go to state 79
    '<'        shift, and go to state 80
    '>'        shift, and go to state 81

    $default  reduce using rule 67 (expr_7)


state 37

   68 expr_7: expr_7 . '&' expr_6
   69       | expr_7 . '^' expr_6
   70       | expr_7 . '|' expr_6
   71 expr_8: expr_7 .

    '&'  shift, and go to state 82
    '^'  shift, and go to state 83
    '|'  shift, and go to state 84

    $default  reduce using rule 71 (expr_8)


state 38

   72 expr_8: expr_8 . BINARY_LOGICALAND expr_7
   73       | expr_8 . BINARY_LOGICALOR expr_7
   74 expr_9: expr_8 .
   76       | expr_8 . '=' expr_9
   77       | expr_8 . ADDASSIGN expr_9
   78       | expr_8 . SUBASSIGN expr_9
   79       | expr_8 . MULASSIGN expr_9
   80       | expr_8 . DIVASSIGN expr_9
   81       | expr_8 . RMDASSIGN expr_9
   82       | expr_8 . ANDASSIGN expr_9
   83       | expr_8 . ORASSIGN expr_9
   84       | expr_8 . XORASSIGN expr_9
   85       | expr_8 . LSFASSIGN expr_9
   86       | expr_8 . RSFASSIGN expr_9

    BINARY_LOGICALAND  shift, and go to state 85
    BINARY_LOGICALOR   shift, and go to state 86
    ADDASSIGN          shift, and go to state 87
    SUBASSIGN          shift, and go to state 88
    MULASSIGN          shift, and go to state 89
    DIVASSIGN          shift, and go to state 90
    RMDASSIGN          shift, and go to state 91
    ANDASSIGN          shift, and go to state 92
    ORASSIGN           shift, and go to state 93
    XORASSIGN          shift, and go to state 94
    LSFASSIGN          shift, and go to state 95
    RSFASSIGN          shift, and go to state 96
    '='                shift, and go to state 97

    $default  reduce using rule 74 (expr_9)


state 39

   75 expr_9: expr_9 . '?' expr_9 ':' expr_9
   87 expr: expr_9 .

    '?'  shift, and go to state 98

    $default  reduce using rule 87 (expr)


state 40

   88 expr_statement: expr . ';'

    ';'  shift, and go to state 99


state 41

    6 statement: expr_statement .

    $default  reduce using rule 6 (statement)


state 42

    7 statement: continue_statement .

    $default  reduce using rule 7 (statement)


state 43

    8 statement: break_statement .

    $default  reduce using rule 8 (statement)


state 44

    9 statement: return_statement .

    $default  reduce using rule 9 (statement)


state 45

    0 $accept: program $end .

    $default  accept


state 46

   10 statement: error ';' .

    $default  reduce using rule 10 (statement)


state 47

   11 statement: error '}' .

    $default  reduce using rule 11 (statement)


state 48

   21 vardecl_statement: VARTYPE IDENTIFIER . vardecl_list ';'

    $default  reduce using rule 23 (vardecl_list)

    vardecl_list  go to state 100


state 49

   16 fdef_statement: FUNC IDENTIFIER . '(' argdef ')' block

    '('  shift, and go to state 101


state 50

   27 for_statement: FOR '(' . expr ';' expr ';' expr ')' block

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 39
    expr    go to state 102


state 51

   26 while_statement: WHILE '(' . expr ')' block

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 39
    expr    go to state 103


state 52

   24 if_statement: IF '(' . expr ')' block
   25             | IF '(' . expr ')' block ELSE block

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 39
    expr    go to state 104


state 53

   89 continue_statement: CONTINUE ';' .

    $default  reduce using rule 89 (continue_statement)


state 54

   90 break_statement: BREAK ';' .

    $default  reduce using rule 90 (break_statement)


state 55

   91 return_statement: RETURN expr . ';'

    ';'  shift, and go to state 105


state 56

   42 expr_2: MONIC_INC expr_2 .

    $default  reduce using rule 42 (expr_2)


state 57

   43 expr_2: MONIC_DEC expr_2 .

    $default  reduce using rule 43 (expr_2)


state 58

   31 preexp: '(' expr . ')'

    ')'  shift, and go to state 106


state 59

   44 expr_2: '+' expr_2 .

    $default  reduce using rule 44 (expr_2)


state 60

   45 expr_2: '-' expr_2 .

    $default  reduce using rule 45 (expr_2)


state 61

   46 expr_2: '!' expr_2 .

    $default  reduce using rule 46 (expr_2)


state 62

   47 expr_2: '~' expr_2 .

    $default  reduce using rule 47 (expr_2)


state 63

   48 expr_2: '*' expr_2 .

    $default  reduce using rule 48 (expr_2)


state 64

   49 expr_2: '&' expr_2 .

    $default  reduce using rule 49 (expr_2)


state 65

   33 expr_1: expr_1 MONIC_INC .

    $default  reduce using rule 33 (expr_1)


state 66

   34 expr_1: expr_1 MONIC_DEC .

    $default  reduce using rule 34 (expr_1)


state 67

   35 expr_1: expr_1 '(' . arglist ')'

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    $default  reduce using rule 38 (arglist)

    preexp   go to state 30
    expr_1   go to state 31
    arglist  go to state 107
    expr_2   go to state 32
    expr_3   go to state 33
    expr_4   go to state 34
    expr_5   go to state 35
    expr_6   go to state 36
    expr_7   go to state 37
    expr_8   go to state 38
    expr_9   go to state 39
    expr     go to state 108


state 68

   36 expr_1: expr_1 '[' . expr ']'

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 39
    expr    go to state 109


state 69

   51 expr_3: expr_3 '*' . expr_2

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 110


state 70

   52 expr_3: expr_3 '/' . expr_2

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 111


state 71

   53 expr_3: expr_3 '%' . expr_2

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 112


state 72

   55 expr_4: expr_4 '+' . expr_3

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 113


state 73

   56 expr_4: expr_4 '-' . expr_3

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 114


state 74

   58 expr_5: expr_5 BINARY_LSF . expr_4

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 115


state 75

   59 expr_5: expr_5 BINARY_RSF . expr_4

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 116


state 76

   62 expr_6: expr_6 BINARY_LE . expr_5

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 117


state 77

   64 expr_6: expr_6 BINARY_GE . expr_5

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 118


state 78

   65 expr_6: expr_6 BINARY_EQ . expr_5

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 119


state 79

   66 expr_6: expr_6 BINARY_NE . expr_5

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 120


state 80

   61 expr_6: expr_6 '<' . expr_5

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 121


state 81

   63 expr_6: expr_6 '>' . expr_5

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 122


state 82

   68 expr_7: expr_7 '&' . expr_6

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 123


state 83

   69 expr_7: expr_7 '^' . expr_6

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 124


state 84

   70 expr_7: expr_7 '|' . expr_6

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 125


state 85

   72 expr_8: expr_8 BINARY_LOGICALAND . expr_7

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 126


state 86

   73 expr_8: expr_8 BINARY_LOGICALOR . expr_7

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 127


state 87

   77 expr_9: expr_8 ADDASSIGN . expr_9

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 128


state 88

   78 expr_9: expr_8 SUBASSIGN . expr_9

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 129


state 89

   79 expr_9: expr_8 MULASSIGN . expr_9

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 130


state 90

   80 expr_9: expr_8 DIVASSIGN . expr_9

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 131


state 91

   81 expr_9: expr_8 RMDASSIGN . expr_9

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 132


state 92

   82 expr_9: expr_8 ANDASSIGN . expr_9

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 133


state 93

   83 expr_9: expr_8 ORASSIGN . expr_9

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 134


state 94

   84 expr_9: expr_8 XORASSIGN . expr_9

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 135


state 95

   85 expr_9: expr_8 LSFASSIGN . expr_9

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 136


state 96

   86 expr_9: expr_8 RSFASSIGN . expr_9

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 137


state 97

   76 expr_9: expr_8 '=' . expr_9

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 138


state 98

   75 expr_9: expr_9 '?' . expr_9 ':' expr_9

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 139


state 99

   88 expr_statement: expr ';' .

    $default  reduce using rule 88 (expr_statement)


state 100

   21 vardecl_statement: VARTYPE IDENTIFIER vardecl_list . ';'
   22 vardecl_list: vardecl_list . ',' IDENTIFIER

    ';'  shift, and go to state 140
    ','  shift, and go to state 141


state 101

   16 fdef_statement: FUNC IDENTIFIER '(' . argdef ')' block

    VARTYPE  shift, and go to state 142

    $default  reduce using rule 18 (argdef)

    argdef  go to state 143


state 102

   27 for_statement: FOR '(' expr . ';' expr ';' expr ')' block

    ';'  shift, and go to state 144


state 103

   26 while_statement: WHILE '(' expr . ')' block

    ')'  shift, and go to state 145


state 104

   24 if_statement: IF '(' expr . ')' block
   25             | IF '(' expr . ')' block ELSE block

    ')'  shift, and go to state 146


state 105

   91 return_statement: RETURN expr ';' .

    $default  reduce using rule 91 (return_statement)


state 106

   31 preexp: '(' expr ')' .

    $default  reduce using rule 31 (preexp)


state 107

   35 expr_1: expr_1 '(' arglist . ')'

    ')'  shift, and go to state 147


state 108

   37 arglist: expr . arglist2

    $default  reduce using rule 40 (arglist2)

    arglist2  go to state 148


state 109

   36 expr_1: expr_1 '[' expr . ']'

    ']'  shift, and go to state 149


state 110

   51 expr_3: expr_3 '*' expr_2 .

    $default  reduce using rule 51 (expr_3)


state 111

   52 expr_3: expr_3 '/' expr_2 .

    $default  reduce using rule 52 (expr_3)


state 112

   53 expr_3: expr_3 '%' expr_2 .

    $default  reduce using rule 53 (expr_3)


state 113

   51 expr_3: expr_3 . '*' expr_2
   52       | expr_3 . '/' expr_2
   53       | expr_3 . '%' expr_2
   55 expr_4: expr_4 '+' expr_3 .

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71

    $default  reduce using rule 55 (expr_4)


state 114

   51 expr_3: expr_3 . '*' expr_2
   52       | expr_3 . '/' expr_2
   53       | expr_3 . '%' expr_2
   56 expr_4: expr_4 '-' expr_3 .

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '%'  shift, and go to state 71

    $default  reduce using rule 56 (expr_4)


state 115

   55 expr_4: expr_4 . '+' expr_3
   56       | expr_4 . '-' expr_3
   58 expr_5: expr_5 BINARY_LSF expr_4 .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 58 (expr_5)


state 116

   55 expr_4: expr_4 . '+' expr_3
   56       | expr_4 . '-' expr_3
   59 expr_5: expr_5 BINARY_RSF expr_4 .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 59 (expr_5)


state 117

   58 expr_5: expr_5 . BINARY_LSF expr_4
   59       | expr_5 . BINARY_RSF expr_4
   62 expr_6: expr_6 BINARY_LE expr_5 .

    BINARY_LSF  shift, and go to state 74
    BINARY_RSF  shift, and go to state 75

    $default  reduce using rule 62 (expr_6)


state 118

   58 expr_5: expr_5 . BINARY_LSF expr_4
   59       | expr_5 . BINARY_RSF expr_4
   64 expr_6: expr_6 BINARY_GE expr_5 .

    BINARY_LSF  shift, and go to state 74
    BINARY_RSF  shift, and go to state 75

    $default  reduce using rule 64 (expr_6)


state 119

   58 expr_5: expr_5 . BINARY_LSF expr_4
   59       | expr_5 . BINARY_RSF expr_4
   65 expr_6: expr_6 BINARY_EQ expr_5 .

    BINARY_LSF  shift, and go to state 74
    BINARY_RSF  shift, and go to state 75

    $default  reduce using rule 65 (expr_6)


state 120

   58 expr_5: expr_5 . BINARY_LSF expr_4
   59       | expr_5 . BINARY_RSF expr_4
   66 expr_6: expr_6 BINARY_NE expr_5 .

    BINARY_LSF  shift, and go to state 74
    BINARY_RSF  shift, and go to state 75

    $default  reduce using rule 66 (expr_6)


state 121

   58 expr_5: expr_5 . BINARY_LSF expr_4
   59       | expr_5 . BINARY_RSF expr_4
   61 expr_6: expr_6 '<' expr_5 .

    BINARY_LSF  shift, and go to state 74
    BINARY_RSF  shift, and go to state 75

    $default  reduce using rule 61 (expr_6)


state 122

   58 expr_5: expr_5 . BINARY_LSF expr_4
   59       | expr_5 . BINARY_RSF expr_4
   63 expr_6: expr_6 '>' expr_5 .

    BINARY_LSF  shift, and go to state 74
    BINARY_RSF  shift, and go to state 75

    $default  reduce using rule 63 (expr_6)


state 123

   61 expr_6: expr_6 . '<' expr_5
   62       | expr_6 . BINARY_LE expr_5
   63       | expr_6 . '>' expr_5
   64       | expr_6 . BINARY_GE expr_5
   65       | expr_6 . BINARY_EQ expr_5
   66       | expr_6 . BINARY_NE expr_5
   68 expr_7: expr_7 '&' expr_6 .

    BINARY_LE  shift, and go to state 76
    BINARY_GE  shift, and go to state 77
    BINARY_EQ  shift, and go to state 78
    BINARY_NE  shift, and go to state 79
    '<'        shift, and go to state 80
    '>'        shift, and go to state 81

    $default  reduce using rule 68 (expr_7)


state 124

   61 expr_6: expr_6 . '<' expr_5
   62       | expr_6 . BINARY_LE expr_5
   63       | expr_6 . '>' expr_5
   64       | expr_6 . BINARY_GE expr_5
   65       | expr_6 . BINARY_EQ expr_5
   66       | expr_6 . BINARY_NE expr_5
   69 expr_7: expr_7 '^' expr_6 .

    BINARY_LE  shift, and go to state 76
    BINARY_GE  shift, and go to state 77
    BINARY_EQ  shift, and go to state 78
    BINARY_NE  shift, and go to state 79
    '<'        shift, and go to state 80
    '>'        shift, and go to state 81

    $default  reduce using rule 69 (expr_7)


state 125

   61 expr_6: expr_6 . '<' expr_5
   62       | expr_6 . BINARY_LE expr_5
   63       | expr_6 . '>' expr_5
   64       | expr_6 . BINARY_GE expr_5
   65       | expr_6 . BINARY_EQ expr_5
   66       | expr_6 . BINARY_NE expr_5
   70 expr_7: expr_7 '|' expr_6 .

    BINARY_LE  shift, and go to state 76
    BINARY_GE  shift, and go to state 77
    BINARY_EQ  shift, and go to state 78
    BINARY_NE  shift, and go to state 79
    '<'        shift, and go to state 80
    '>'        shift, and go to state 81

    $default  reduce using rule 70 (expr_7)


state 126

   68 expr_7: expr_7 . '&' expr_6
   69       | expr_7 . '^' expr_6
   70       | expr_7 . '|' expr_6
   72 expr_8: expr_8 BINARY_LOGICALAND expr_7 .

    '&'  shift, and go to state 82
    '^'  shift, and go to state 83
    '|'  shift, and go to state 84

    $default  reduce using rule 72 (expr_8)


state 127

   68 expr_7: expr_7 . '&' expr_6
   69       | expr_7 . '^' expr_6
   70       | expr_7 . '|' expr_6
   73 expr_8: expr_8 BINARY_LOGICALOR expr_7 .

    '&'  shift, and go to state 82
    '^'  shift, and go to state 83
    '|'  shift, and go to state 84

    $default  reduce using rule 73 (expr_8)


state 128

   75 expr_9: expr_9 . '?' expr_9 ':' expr_9
   77       | expr_8 ADDASSIGN expr_9 .

    '?'  shift, and go to state 98

    '?'       [reduce using rule 77 (expr_9)]
    $default  reduce using rule 77 (expr_9)


state 129

   75 expr_9: expr_9 . '?' expr_9 ':' expr_9
   78       | expr_8 SUBASSIGN expr_9 .

    '?'  shift, and go to state 98

    '?'       [reduce using rule 78 (expr_9)]
    $default  reduce using rule 78 (expr_9)


state 130

   75 expr_9: expr_9 . '?' expr_9 ':' expr_9
   79       | expr_8 MULASSIGN expr_9 .

    '?'  shift, and go to state 98

    '?'       [reduce using rule 79 (expr_9)]
    $default  reduce using rule 79 (expr_9)


state 131

   75 expr_9: expr_9 . '?' expr_9 ':' expr_9
   80       | expr_8 DIVASSIGN expr_9 .

    '?'  shift, and go to state 98

    '?'       [reduce using rule 80 (expr_9)]
    $default  reduce using rule 80 (expr_9)


state 132

   75 expr_9: expr_9 . '?' expr_9 ':' expr_9
   81       | expr_8 RMDASSIGN expr_9 .

    '?'  shift, and go to state 98

    '?'       [reduce using rule 81 (expr_9)]
    $default  reduce using rule 81 (expr_9)


state 133

   75 expr_9: expr_9 . '?' expr_9 ':' expr_9
   82       | expr_8 ANDASSIGN expr_9 .

    '?'  shift, and go to state 98

    '?'       [reduce using rule 82 (expr_9)]
    $default  reduce using rule 82 (expr_9)


state 134

   75 expr_9: expr_9 . '?' expr_9 ':' expr_9
   83       | expr_8 ORASSIGN expr_9 .

    '?'  shift, and go to state 98

    '?'       [reduce using rule 83 (expr_9)]
    $default  reduce using rule 83 (expr_9)


state 135

   75 expr_9: expr_9 . '?' expr_9 ':' expr_9
   84       | expr_8 XORASSIGN expr_9 .

    '?'  shift, and go to state 98

    '?'       [reduce using rule 84 (expr_9)]
    $default  reduce using rule 84 (expr_9)


state 136

   75 expr_9: expr_9 . '?' expr_9 ':' expr_9
   85       | expr_8 LSFASSIGN expr_9 .

    '?'  shift, and go to state 98

    '?'       [reduce using rule 85 (expr_9)]
    $default  reduce using rule 85 (expr_9)


state 137

   75 expr_9: expr_9 . '?' expr_9 ':' expr_9
   86       | expr_8 RSFASSIGN expr_9 .

    '?'  shift, and go to state 98

    '?'       [reduce using rule 86 (expr_9)]
    $default  reduce using rule 86 (expr_9)


state 138

   75 expr_9: expr_9 . '?' expr_9 ':' expr_9
   76       | expr_8 '=' expr_9 .

    '?'  shift, and go to state 98

    '?'       [reduce using rule 76 (expr_9)]
    $default  reduce using rule 76 (expr_9)


state 139

   75 expr_9: expr_9 . '?' expr_9 ':' expr_9
   75       | expr_9 '?' expr_9 . ':' expr_9

    '?'  shift, and go to state 98
    ':'  shift, and go to state 150


state 140

   21 vardecl_statement: VARTYPE IDENTIFIER vardecl_list ';' .

    $default  reduce using rule 21 (vardecl_statement)


state 141

   22 vardecl_list: vardecl_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 151


state 142

   17 argdef: VARTYPE . IDENTIFIER argdef2

    IDENTIFIER  shift, and go to state 152


state 143

   16 fdef_statement: FUNC IDENTIFIER '(' argdef . ')' block

    ')'  shift, and go to state 153


state 144

   27 for_statement: FOR '(' expr ';' . expr ';' expr ')' block

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 39
    expr    go to state 154


state 145

   26 while_statement: WHILE '(' expr ')' . block

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    VARTYPE     shift, and go to state 7
    FUNC        shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    CONTINUE    shift, and go to state 12
    BREAK       shift, and go to state 13
    RETURN      shift, and go to state 14
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '{'         shift, and go to state 155
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    statement           go to state 156
    block               go to state 157
    fdef_statement      go to state 25
    vardecl_statement   go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29
    preexp              go to state 30
    expr_1              go to state 31
    expr_2              go to state 32
    expr_3              go to state 33
    expr_4              go to state 34
    expr_5              go to state 35
    expr_6              go to state 36
    expr_7              go to state 37
    expr_8              go to state 38
    expr_9              go to state 39
    expr                go to state 40
    expr_statement      go to state 41
    continue_statement  go to state 42
    break_statement     go to state 43
    return_statement    go to state 44


state 146

   24 if_statement: IF '(' expr ')' . block
   25             | IF '(' expr ')' . block ELSE block

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    VARTYPE     shift, and go to state 7
    FUNC        shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    CONTINUE    shift, and go to state 12
    BREAK       shift, and go to state 13
    RETURN      shift, and go to state 14
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '{'         shift, and go to state 155
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    statement           go to state 156
    block               go to state 158
    fdef_statement      go to state 25
    vardecl_statement   go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29
    preexp              go to state 30
    expr_1              go to state 31
    expr_2              go to state 32
    expr_3              go to state 33
    expr_4              go to state 34
    expr_5              go to state 35
    expr_6              go to state 36
    expr_7              go to state 37
    expr_8              go to state 38
    expr_9              go to state 39
    expr                go to state 40
    expr_statement      go to state 41
    continue_statement  go to state 42
    break_statement     go to state 43
    return_statement    go to state 44


state 147

   35 expr_1: expr_1 '(' arglist ')' .

    $default  reduce using rule 35 (expr_1)


state 148

   37 arglist: expr arglist2 .
   39 arglist2: arglist2 . ',' expr

    ','  shift, and go to state 159

    $default  reduce using rule 37 (arglist)


state 149

   36 expr_1: expr_1 '[' expr ']' .

    $default  reduce using rule 36 (expr_1)


state 150

   75 expr_9: expr_9 '?' expr_9 ':' . expr_9

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 160


state 151

   22 vardecl_list: vardecl_list ',' IDENTIFIER .

    $default  reduce using rule 22 (vardecl_list)


state 152

   17 argdef: VARTYPE IDENTIFIER . argdef2

    $default  reduce using rule 20 (argdef2)

    argdef2  go to state 161


state 153

   16 fdef_statement: FUNC IDENTIFIER '(' argdef ')' . block

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    VARTYPE     shift, and go to state 7
    FUNC        shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    CONTINUE    shift, and go to state 12
    BREAK       shift, and go to state 13
    RETURN      shift, and go to state 14
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '{'         shift, and go to state 155
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    statement           go to state 156
    block               go to state 162
    fdef_statement      go to state 25
    vardecl_statement   go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29
    preexp              go to state 30
    expr_1              go to state 31
    expr_2              go to state 32
    expr_3              go to state 33
    expr_4              go to state 34
    expr_5              go to state 35
    expr_6              go to state 36
    expr_7              go to state 37
    expr_8              go to state 38
    expr_9              go to state 39
    expr                go to state 40
    expr_statement      go to state 41
    continue_statement  go to state 42
    break_statement     go to state 43
    return_statement    go to state 44


state 154

   27 for_statement: FOR '(' expr ';' expr . ';' expr ')' block

    ';'  shift, and go to state 163


state 155

   13 block: '{' . statement_list '}'

    $default  reduce using rule 15 (statement_list)

    statement_list  go to state 164


state 156

   12 block: statement .

    $default  reduce using rule 12 (block)


state 157

   26 while_statement: WHILE '(' expr ')' block .

    $default  reduce using rule 26 (while_statement)


state 158

   24 if_statement: IF '(' expr ')' block .
   25             | IF '(' expr ')' block . ELSE block

    ELSE  shift, and go to state 165

    ELSE      [reduce using rule 24 (if_statement)]
    $default  reduce using rule 24 (if_statement)


state 159

   39 arglist2: arglist2 ',' . expr

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 39
    expr    go to state 166


state 160

   75 expr_9: expr_9 . '?' expr_9 ':' expr_9
   75       | expr_9 '?' expr_9 ':' expr_9 .

    '?'  shift, and go to state 98

    '?'       [reduce using rule 75 (expr_9)]
    $default  reduce using rule 75 (expr_9)


state 161

   17 argdef: VARTYPE IDENTIFIER argdef2 .
   19 argdef2: argdef2 . ',' VARTYPE IDENTIFIER

    ','  shift, and go to state 167

    $default  reduce using rule 17 (argdef)


state 162

   16 fdef_statement: FUNC IDENTIFIER '(' argdef ')' block .

    $default  reduce using rule 16 (fdef_statement)


state 163

   27 for_statement: FOR '(' expr ';' expr ';' . expr ')' block

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    preexp  go to state 30
    expr_1  go to state 31
    expr_2  go to state 32
    expr_3  go to state 33
    expr_4  go to state 34
    expr_5  go to state 35
    expr_6  go to state 36
    expr_7  go to state 37
    expr_8  go to state 38
    expr_9  go to state 39
    expr    go to state 168


state 164

   13 block: '{' statement_list . '}'
   14 statement_list: statement_list . statement

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    VARTYPE     shift, and go to state 7
    FUNC        shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    CONTINUE    shift, and go to state 12
    BREAK       shift, and go to state 13
    RETURN      shift, and go to state 14
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '}'         shift, and go to state 169
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    statement           go to state 24
    fdef_statement      go to state 25
    vardecl_statement   go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29
    preexp              go to state 30
    expr_1              go to state 31
    expr_2              go to state 32
    expr_3              go to state 33
    expr_4              go to state 34
    expr_5              go to state 35
    expr_6              go to state 36
    expr_7              go to state 37
    expr_8              go to state 38
    expr_9              go to state 39
    expr                go to state 40
    expr_statement      go to state 41
    continue_statement  go to state 42
    break_statement     go to state 43
    return_statement    go to state 44


state 165

   25 if_statement: IF '(' expr ')' block ELSE . block

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    VARTYPE     shift, and go to state 7
    FUNC        shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    CONTINUE    shift, and go to state 12
    BREAK       shift, and go to state 13
    RETURN      shift, and go to state 14
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '{'         shift, and go to state 155
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    statement           go to state 156
    block               go to state 170
    fdef_statement      go to state 25
    vardecl_statement   go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29
    preexp              go to state 30
    expr_1              go to state 31
    expr_2              go to state 32
    expr_3              go to state 33
    expr_4              go to state 34
    expr_5              go to state 35
    expr_6              go to state 36
    expr_7              go to state 37
    expr_8              go to state 38
    expr_9              go to state 39
    expr                go to state 40
    expr_statement      go to state 41
    continue_statement  go to state 42
    break_statement     go to state 43
    return_statement    go to state 44


state 166

   39 arglist2: arglist2 ',' expr .

    $default  reduce using rule 39 (arglist2)


state 167

   19 argdef2: argdef2 ',' . VARTYPE IDENTIFIER

    VARTYPE  shift, and go to state 171


state 168

   27 for_statement: FOR '(' expr ';' expr ';' expr . ')' block

    ')'  shift, and go to state 172


state 169

   13 block: '{' statement_list '}' .

    $default  reduce using rule 13 (block)


state 170

   25 if_statement: IF '(' expr ')' block ELSE block .

    $default  reduce using rule 25 (if_statement)


state 171

   19 argdef2: argdef2 ',' VARTYPE . IDENTIFIER

    IDENTIFIER  shift, and go to state 173


state 172

   27 for_statement: FOR '(' expr ';' expr ';' expr ')' . block

    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    STRING      shift, and go to state 6
    VARTYPE     shift, and go to state 7
    FUNC        shift, and go to state 8
    FOR         shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    CONTINUE    shift, and go to state 12
    BREAK       shift, and go to state 13
    RETURN      shift, and go to state 14
    MONIC_INC   shift, and go to state 15
    MONIC_DEC   shift, and go to state 16
    '{'         shift, and go to state 155
    '('         shift, and go to state 17
    '+'         shift, and go to state 18
    '-'         shift, and go to state 19
    '!'         shift, and go to state 20
    '~'         shift, and go to state 21
    '*'         shift, and go to state 22
    '&'         shift, and go to state 23

    statement           go to state 156
    block               go to state 174
    fdef_statement      go to state 25
    vardecl_statement   go to state 26
    if_statement        go to state 27
    while_statement     go to state 28
    for_statement       go to state 29
    preexp              go to state 30
    expr_1              go to state 31
    expr_2              go to state 32
    expr_3              go to state 33
    expr_4              go to state 34
    expr_5              go to state 35
    expr_6              go to state 36
    expr_7              go to state 37
    expr_8              go to state 38
    expr_9              go to state 39
    expr                go to state 40
    expr_statement      go to state 41
    continue_statement  go to state 42
    break_statement     go to state 43
    return_statement    go to state 44


state 173

   19 argdef2: argdef2 ',' VARTYPE IDENTIFIER .

    $default  reduce using rule 19 (argdef2)


state 174

   27 for_statement: FOR '(' expr ';' expr ';' expr ')' block .

    $default  reduce using rule 27 (for_statement)
